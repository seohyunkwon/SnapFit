<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ssafy.snapfit.model.dao.LikeDao">
	
	<!-- 1-1. 특정 유저가 특정 영상을 좋아요 했는지에 대한 정보가 DB에 존재하는지 판단하기 -->
	<!-- 입력된 정보가 Like_Video table에 존재하면 해당 정보를 반환하고, 존재하지 않으면 null을 반환한다. -->
	<select id="selectVideoLike" parameterType="LikeVideo" resultType="LikeVideo">
		SELECT *
		FROM Like_Video
		WHERE video_no = #{videoNo}
		<if test="memberNo != 0">
			AND member_no = #{memberNo}
		</if>	
	</select>
	
	<!-- 1-2. 특정 유저가 특정 영상을 좋아요 했다는 정보를 등록하기(삽입하기) -->
	<insert id="insertVideoLike" parameterType="LikeVideo">
	
		INSERT INTO Like_Video
		(member_no, video_no) VALUES
		(#{memberNo}, #{videoNo})
	
	</insert>
	
	<!-- 1-3. 특정 유저가 특정 영상을 좋아요 했다는 정보를 삭제하기 -->
	<delete id="deleteVideoLike" parameterType="LikeVideo">
	
		DELETE FROM Like_Video
		WHERE member_no = #{memberNo} AND video_no = #{videoNo}
	
	</delete>
	
	
	
	<!-- 2-1. 특정 유저가 특정 댓글을 좋아요 했는지에 대한 정보가 DB에 존재하는지 판단하기 -->
	<!-- 입력된 정보가 Like_Comment table에 존재하면 해당 정보를 반환하고, 존재하지 않으면 null을 반환한다. -->
	<select id="checkCommentLike" parameterType="LikeComment" resultType="LikeComment">
	
		SELECT *
		FROM Like_Comment
		WHERE member_no = #{memberNo} AND comment_no = #{commentNo}
	
	</select>
	
	<!-- 2-2. 특정 유저가 특정 댓글을 좋아요 했다는 정보를 등록하기(삽입하기) -->
	<insert id="insertCommentLike" parameterType="LikeComment">
	
		INSERT INTO Like_Comment
		(member_no, comment_no) VALUES
		(#{memberNo}, #{commentNo})
	
	</insert>
	
	<!-- 2-3. 특정 유저가 특정 댓글을 좋아요 했다는 정보를 삭제하기 -->
	<delete id="deleteCommentLike" parameterType="LikeComment">
	
		DELETE FROM Like_Comment
		WHERE member_no = #{memberNo} AND comment_no = #{commentNo}
	
	</delete>
	
</mapper>