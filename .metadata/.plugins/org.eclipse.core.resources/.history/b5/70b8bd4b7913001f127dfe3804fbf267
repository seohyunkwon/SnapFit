package com.ssafy.snapfit.config;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;
import org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.security.web.SecurityFilterChain;

import com.ssafy.snapfit.security.JwtFilter;
import com.ssafy.snapfit.security.JwtUtil;

@Configuration
@EnableWebSecurity
public class SecurityConfig {
	
	@Autowired
	private final JwtUtil jwtUtil;
	
	@Bean
	public PasswordEncoder passwordEncoder() {
		return new BCryptPasswordEncoder();
	}
	
	public SecurityConfig(JwtUtil jwtUtil) {
		super();
		this.jwtUtil = jwtUtil;
	}



	@Bean
	public SecurityFilterChain securityFilterChain(HttpSecurity http) throws Exception {
		
		// 토큰 사용 -> csrf 사용 X
		http
		.csrf().disable()
		.authorizeHttpRequests(res -> res.requestMatchers("/**").permitAll())
		.addFilterBefore(new JwtFilter(new ), null);
				
		
		return http.build();
	}
}
