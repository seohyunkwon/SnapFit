package com.ssafy.fit.controller;

import java.util.List;

import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.ssafy.fit.model.dto.SearchCondition;
import com.ssafy.fit.model.dto.Video;
import com.ssafy.fit.model.service.VideoService;

import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.tags.Tag;

@RestController
@RequestMapping("/api-video")
@Tag(name ="VideoRestController", description = "비디오 CRUD")
@CrossOrigin(origins = "*")
public class VideoController {
	private final VideoService videoService;
	
	public VideoController(VideoService videoService) {
		this.videoService = videoService;
	}
	
	// 전체 비디오 가져오기
	@GetMapping("/video")
	@Operation(summary = "전체 비디오 목록 조회", description = "DB에 저장된 전체 비디오 목록을 조회")
	public ResponseEntity<?> list() {
		List<Video> list = videoService.getVideoList();
		// 비디오가 하나도 없을때 
		if(list == null || list.size() == 0) {
			return new ResponseEntity<Void>(HttpStatus.NO_CONTENT);
		}
		// 비디오가 있을 때
		return new ResponseEntity<List<Video>>(list,HttpStatus.OK);
	}
	
	// 쿼리스트링 => /video?id=1
	// REST API =>/video/1
	// 특정 비디오 가져오기
	@GetMapping("/video/{id}")
	@Operation(summary = "특정 비디오 조회", description = "입력받은 비디오 번호에 맞는 상세 비디오 조회")
	public ResponseEntity<?> detail(@Parameter(description = "비디오 번호") @PathVariable("id") String id) {
		Video video = videoService.getVideo(id);
		if(video == null) {
			return new ResponseEntity<Void>(HttpStatus.NO_CONTENT);
		}
		return new ResponseEntity<Video>(video, HttpStatus.OK);
	}
	
	// 비디오 검색
	// JSON @RequestBody <-> @ResponseBody
	// FORM @ModelAttribute
	@GetMapping("/video/search")
	@Operation(summary = "비디오 검색", description = "검색 조건에 알맞는 비디오 조회")
	public ResponseEntity<?> search(@Parameter(description = "검색 조건") @ModelAttribute SearchCondition sc){
		List<Video> list = videoService.searchVideos(sc);
		if(list == null || list.size() == 0) {
			return new ResponseEntity<Void>(HttpStatus.NO_CONTENT);
		}
		return new ResponseEntity<List<Video>>(list, HttpStatus.OK);
		
	}
	
	@PostMapping("/video")
	public ResponseEntity<?> insert(@RequestBody Video video) {
		videoService.insertVideo(video);
		return new ResponseEntity<>(HttpStatus.OK);
	}

}
