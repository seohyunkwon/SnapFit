package com.ssafy.fit.controller;

import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;

import com.ssafy.fit.model.dto.User;
import com.ssafy.fit.model.service.UserService;

import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.tags.Tag;
import jakarta.servlet.http.HttpSession;

@RestController
@RequestMapping("/api-user")
@Tag(name ="UserRestController", description = "유저 CRUD")
@CrossOrigin(origins = "*")
public class UserController {
	
	private final UserService userService;

	public UserController(UserService userService) {
		this.userService = userService;
	}
	
	// 회원가입
	@PostMapping("/signup")
	@Operation(summary = "회원가입", description = "유저 정보를 입력 받아 회원가입")
	public ResponseEntity<Void> signup(@Parameter(description = "입력받은 유저의 정보") @ModelAttribute User user){
		int result = userService.join(user);
		if (result == 0) {
			// 실패했을 때
			return new ResponseEntity<>(HttpStatus.BAD_REQUEST);
		}
		return new ResponseEntity<>(HttpStatus.OK);
	}
	
	// 로그인
	@PostMapping("/login")
	@Operation(summary = "로그인", description = "유저 정보를 입력 받아 회원 여부 확인 후 로그인")
	public ResponseEntity<Void> login(@Parameter(description = "입력받은 유저의 정보") @ResponseBody User user, HttpSession session){
		User loginUser = userService.getUser(user);
		System.out.println(user);
		if (loginUser == null) {
			return new ResponseEntity<>(HttpStatus.UNAUTHORIZED);
		}
		session.setAttribute("loginUser", loginUser);
		return new ResponseEntity<>(HttpStatus.OK);
	}
	
	// 로그아웃
	@PostMapping("/logout")
	@Operation(summary = "로그아웃", description = "회원 정보를 만료시키고 로그아웃")
	public ResponseEntity<Void> logout(HttpSession session){
		session.invalidate();
		return new ResponseEntity<>(HttpStatus.OK);
	}
	
}
