package com.ssafy.snapfit.controller;

import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.ssafy.snapfit.model.dao.LikeCommentDao;
import com.ssafy.snapfit.model.dao.LikeVideoDao;
import com.ssafy.snapfit.model.dto.LikeVideo;
import com.ssafy.snapfit.service.LikeCommentService;
import com.ssafy.snapfit.service.LikeVideoService;

@RestController
@RequestMapping("/like")
public class LikeController {
	
	private final LikeVideoService likeVideoService;
	private final LikeCommentService likeCommentService;
	
	public LikeController(LikeVideoService likeVideoService, LikeCommentService likeCommentService) {
		this.likeVideoService = likeVideoService;
		this.likeCommentService = likeCommentService;
	}

	@PostMapping("/video/{videoNo}/{memberNo}")
	public ResponseEntity<?> addLikeVideo(@RequestBody LikeVideo likeVideo) {
		
		if(!likeVideoService.isLiked(likeVideo) && likeVideoService.addLikeVideo(likeVideo)) {
			return new ResponseEntity<Void>(HttpStatus.CREATED);
		}
		
		return new ResponseEntity<Void>(HttpStatus.BAD_REQUEST);
		
	}
	
	@DeleteMapping("/video/{videoNo}/{memberNo")
	public ResponseEntity<?> deleteLikeVideo(@RequestBody LikeVideo likeVideo) {
		if(likeVideoService.addLikeVideo(likeVideo)) {
			return new ResponseEntity<Void>(HttpStatus.CREATED);
		}
		return new ResponseEntity<Void>(HttpStatus.BAD_REQUEST);
	}
	
	@GetMapping("/video/{videoNo}/{memberNo}")
	public ResponseEntity<?> isExistLikeVideo(@RequestBody LikeVideo likeVideo) {
		if(likeVideoService.isLiked(likeVideo)) {
			return new ResponseEntity<Void>(HttpStatus.OK);
		}
		return new ResponseEntity<Void>(HttpStatus.NO_CONTENT);
	}
	

}
