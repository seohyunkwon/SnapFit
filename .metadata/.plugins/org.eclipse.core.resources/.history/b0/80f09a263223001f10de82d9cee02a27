<!DOCTYPE html>
<html xmlns:th="http://www.thymeleaf.org"
      xmlns:sec="http://www.thymeleaf.org/extras/spring-security">
<head>
    <meta charset="UTF-8">
    <title>Shop</title>
    <link rel="stylesheet" href="/css/styles.css">
    <script>
        document.addEventListener("DOMContentLoaded", function() {
            document.getElementById("search-button").addEventListener("click", (event) => {
                event.preventDefault();
                const keyword = document.getElementById("keyword-input").value;
                console.log("Search button clicked, keyword:", keyword);
                if (keyword) {
                    fetchKeyword(keyword);
                } else {
                    alert("키워드를 입력하세요.");
                }
            });
        });

        // 네이버 검색광고 플랫폼에서 발급받은 Access Key, Secret Key, Customer ID 입력
        // https://ads.naver.com

        // 1-1. 광고시스템에 로그인.
        // 1-2. [도구 -> API 사용 관리] 메뉴 클릭
        // 1-3. [네이버 검색광고 API 서비스 신청] 버튼 클릭
        // 1-4. API키 자동 발급

        const accessLicense = "0100000000d1dc8f2ece3db88133f9d4775a432cdb1beca7c9e857e3a44a2864a0de0dfc6a";
        const secretKey = "AQAAAADR3I8uzj24gTP51HdaQyzbymNu5a239q9mNg9V4/MTwA==";
        const customerId = "3213386";

        //CORS우회 프록시 서버
        const proxyURL = "https://cors-anywhere.herokuapp.com/";

        // 네이버 키워드 검색 API를 이용하여 주어진 키워드에 대한 검색 결과 반환
        async function fetchKeyword(keywords) {
            console.log("Fetching keyword:", keywords);
            // API 호출에 필요한 인자들을 정의
            const method = "GET";
            const api_url = "/keywordstool";
            const timestamp = Date.now().toString();

            // HMAC-SHA256 암호화를 이용하여 서명(signature)을 생성
            const signature = await createSignature(secretKey, timestamp, method, api_url);

            // 생성한 서명과 함께 API를 호출하여 검색 결과 반환
            const response = await fetch(
                `${proxyURL}https://api.naver.com/keywordstool?hintKeywords=${encodeURIComponent(keywords)}&showDetail=1`,
                {
                    headers: {
                        "X-Timestamp": timestamp,
                        "X-API-KEY": accessLicense,
                        "X-CUSTOMER": customerId,
                        "X-Signature": signature,
                    },
                }
            );

            // 검색 결과를 출력하는 함수를 호출
            const data = await response.json();
            console.log("API response:", data);
            displayResults(data);
        }

        // HMAC-SHA256 암호화를 이용하여 서명(signature)을 생성
        async function createSignature(secretKey, timestamp, method, api_url) {
            // TextEncoder를 이용하여 입력 데이터를 UTF-8 형식으로 인코딩
            const encoder = new TextEncoder();
            const data = encoder.encode(`${timestamp}.${method}.${api_url}`);

            // 암호화에 사용할 키를 생성
            const key = await crypto.subtle.importKey("raw", encoder.encode(secretKey), { name: "HMAC", hash: "SHA-256" }, false, ["sign"]);

            // 생성한 키와 입력 데이터를 이용하여 서명을 생성
            const signatureArrayBuffer = await crypto.subtle.sign("HMAC", key, data);

            // 서명 결과를 base64로 인코딩
            const signature = btoa(String.fromCharCode(...new Uint8Array(signatureArrayBuffer)));
            return signature;
        }

        // 검색 결과 출력
        function displayResults(data) {
            console.log("Displaying results:", data);
            let maxResults = 10;
            for (let i = 0; i < data.keywordList.length; i++) {
                const keyword = data.keywordList[i];
                console.log(keyword.relKeyword);
            }
        }
    </script>
</head>
<body>
    <div th:fragment="header">
        <nav class="navbar navbar-expand-sm bg-primary navbar-dark">
            <button class="navbar-toggler" type="button" data-toggle="collapse"
                    data-target="#navbarTogglerDemo03" aria-controls="navbarTogglerDemo03"
                    aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <a class="navbar-brand" href="/">Shop</a>

            <div class="collapse navbar-collapse" id="navbarTogglerDemo03">
                <ul class="navbar-nav mr-auto mt-2 mt-lg-0">
                    <li class="nav-item" sec:authorize="hasAnyAuthority('ROLE_ADMIN')">
                        <a class="nav-link" href="/admin/item/new">상품 등록</a>
                    </li>
                    <li class="nav-item" sec:authorize="hasAnyAuthority('ROLE_ADMIN')">
                        <a class="nav-link" href="/admin/items">상품 관리</a>
                    </li>
                    <li class="nav-item" sec:authorize="isAuthenticated()">
                        <a class="nav-link" href="/cart">장바구니</a>
                    </li>
                    <li class="nav-item" sec:authorize="isAuthenticated()">
                        <a class="nav-link" href="/orders">구매이력</a>
                    </li>
                    <li class="nav-item" sec:authorize="isAnonymous()">
                        <a class="nav-link" href="/members/login">로그인</a>
                    </li>
                    <li class="nav-item" sec:authorize="isAuthenticated()">
                        <a class="nav-link" href="/members/logout">로그아웃</a>
                    </li>
                </ul>
                <input id="keyword-input" type="search">
                <button class="btn btn-outline-success my-2 my-sm-0" type="submit" id="search-button">Search</button>
            </div>
        </nav>
    </div>
</body>
</html>
